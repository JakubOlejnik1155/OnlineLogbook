@import './variables.scss';
.loginForm{
    flex-grow: 3;
    font-size: $smallMobile;
    color: $mainTextColor;
    width: 65%;
    max-width: 440px;
    margin: 4vh auto 0 auto;
    outline-style: none;
    border: none;
    &__inputContainer{
        width: 100%;
        height: 50px;
        margin-top: 20px;
        position: relative;
        text-align: center;
        display: flex;
        flex-direction: column;
        overflow: hidden;
    }
}
.inputContainer{
    &__input{
        height: 100%;
        width: 100%;
        padding-top: 20px;
        border: none;
        outline-style: none;
        font-size: $smallMobile;
    }
    &__label{
        font-size: 16px;
        position: absolute;
        bottom: 0px;
        left: 0px;
        height: 100%;
        width: 100%;
        text-align: left;
        pointer-events: none;
        border-bottom: 1px solid lighten($mainTextColor, 20%);
        &::after{
            content: '';
            position: absolute;
            bottom: -1px;
            left: 0px;
            height: 100%;
            width: 100%;
            border: none;
            outline-style: none;
            border-bottom: 2px solid $mainTextColor;
            transform: translateX(-100%);
            transition: all .3s ease;
        }
        .labelContent{
            position: absolute;
            left: 0;
            bottom: 2px;
            transition: all .3s ease;
            .labelIcon{
                font-size: 13px;
                color: $mainTextColor;
            }
        }
    }
}
///forgot password
.ForgotPassword{
    text-align: center;
    padding: 5vh 0;
    font-size: $smallMobile;
    font-weight: 100;
    letter-spacing: 0.06em;
    &__Link{
        color: $mainTextColor;
        text-decoration: underline;
        background-color: transparent;
        border: none;
        outline: none;
        text-align: center;
        font-size: $smallMobile;
        font-weight: 100;
        letter-spacing: $mainSpacing + 0.025;
    }
}
//Sign In Button
.loginForm__SignInButton{
    width: 200px;
    height: 40px;
    text-align: center;
    text-transform: uppercase;
    font-size: $bigMobile;
    font-weight: 100;
    color: white;
    letter-spacing: $mainSpacing;
    border: none;
    border-radius: 50px;
    display: block;
    margin: 0 auto 10px auto;
    outline: none;
    background-image: $buttonColorGradient;
    background-size: 300% 100%;
    -moz-transition: all .4s ease-in-out;
    -o-transition: all .4s ease-in-out;
    -webkit-transition: all .4s ease-in-out;
    transition: all .4s ease-in-out;
    box-shadow: 0 4px 15px 0 rgba(65, 132, 234, 0.75);
    &:hover {
        cursor: pointer;
        background-position: 100% 0;
        -moz-transition: all .4s ease-in-out;
        -o-transition: all .4s ease-in-out;
        -webkit-transition: all .4s ease-in-out;
        transition: all .4s ease-in-out;
    }
}

.rememberMeContainer{
    text-align: center;
    margin-top: 20px;
    .rememberMe{
        display: inline-flex;
        align-items: center;
        cursor: pointer;
        -webkit-tap-highlight-color: transparent;
        &Checkbox{
            display: none;
            &__box{
                width: 1.15em;
                height: 1.15em;
                border: 2px solid #979797;
                border-radius: 3px;
                display: flex;
                align-items: center;
                justify-content: center;
                margin-right: 10px;
                flex-shrink: 0;
                transition: all 0.15s;
                &::after{
                    content: '\2714';
                    color: white;
                    transform: scale(0);
                    transition: all 0.15s;
                }
            }
        }
    }
}
.rememberMeCheckbox:checked + .rememberMeCheckbox__box{
    background-color: #02b240;
    border-color: #02b240;
    &::after{
        transform: scale(1);
    }
}

//animations
.inputContainer input:focus + .inputContainer__label .labelContent,
.inputContainer input:valid + .inputContainer__label .labelContent{
    transform: translateY(-100%);
}
.inputContainer input:focus + .inputContainer__label::after,
.inputContainer input:valid + .inputContainer__label::after{
    transform: translateX(0);
}



